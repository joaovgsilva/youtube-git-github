0. atalhos git:
0.1 usando a 'seta para baixo', é possível resgatar o histórico dos últimos códigos utilizados;
0.2 apertando a teclado 'crtl + l', limpa a tela do terminal;
0.3 a tecla "TAB" mostra todas as opções disponível dentro de determinado comando;

1. git = arquivo .git dentro do projeto;

2. commit = marco histórico;

3. estados do commit:
3.1 modified = arquivos alterados;
3.2 staging = arquivos prontos para serem enviados;
3.3 committed = arquivos enviados;

4. branch = linha do tempo; 

5. configurando o git;
5.1 dentro do terminal, usar as seguintes sequências de códigos:
    'git --version' = versão que o git está instalado;
    'git config --global --list' = lista de configurações;
    'git config --global user.name "Nome Usuário"';
    'git config --global user.email emailusuário@email.com';
   
6. comandos do terminal:
6.1 'dir' ou 'ls' = lista todos os arquivos e diretórios;
6.2 'cd nome.diretório' = comando para acessar o diretório;
6.3 'touch nome.arquivo' = comando para criar arquivo;
6.4 'rm nome.arquivo' = comando para remover o arquivo;
6.5 'cd ..' = utilizado para voltar uma pasta;
6.6 'rmdir nome.pasta' = comando utilizado para remover uma pasta;
6.7 'mkdir nome.pasta' = comando utilizado para criar uma nova pasta;
6.8 'nano nome.arquivo' = abre o conteúdo que está dentro do arquivo;
6.8.1 'writeout' = comando utilizado para abrir o conteúdo, como se fosse um botão "ok"; 
6.8.2 'exit' = comando utilizado para sair;
6.9 'cat nome.arquivo' = exibe na tela o conteúdo na tela;
6.10 'mv nome.arquivo nome.arquivo.alterado' = comando utilizado para alterar o nome do arquivo;